# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = senor-octopus
description = A streaming hub. Sort of.
author = Beto Dealmeida
author_email = roberto@dealmeida.net
license = MIT
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/betodealmeida/senor-octopus
# Add here related links, for example:
project_urls =
#    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    PyYAML>=5.4
    asciidag>=0.2.0
    asyncstdlib>=3.9.1
    crontab>=0.22.9
    durations>=0.3.3
    typing_extensions>=3.7.4.3

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
source.awair =
    python-dateutil>=2.8.1
    httpx>=0.17.1

source.crypto =
    cryptocompare>=0.7.5

source.mqtt = 
    asyncio-mqtt>=0.8.1
    paho-mqtt>=1.5.1

source.speedtest =
    speedtest-cli>=2.1.3

source.sqla =
    sqlalchemy>=1.4.3

source.stock =
    stockquotes>=2.0.1

source.sun =
    suntime>=1.2.5

source.weatherapi =
    httpx>=0.17.1

source.whistle =
    aiohttp>=3.7.4.post0
    python-geohash>=0.8.5
    pywhistle>=0.0.2

filter.jinja =
    jinja2>=2.11.3

filter.jsonpath =
    jsonpath-python>=1.0.5

sink.db.postgres =
    aiopg>=1.1.0
    psycopg2-binary>=2.8.6

sink.mqtt =
    asyncio-mqtt>=0.8.1

sink.pushover =
    httpx>=0.17.1

sink.slack =
    slack_sdk>=3.7.0

sink.sms =
    twilio>=6.58.0

sink.tuya =
    tuyapy>=0.1.4
    typing_extensions>=3.7.4.3

testing =
    aioresponses>=0.7.2
    aiotools>=1.2.1
    asynctest>=0.13.0
    codespell>=2.1.0
    freezegun>=1.1.0
    pip-tools>=6.4.0
    pre-commit>=2.13.0
    pytest>=6.2.4
    pytest-asyncio>=0.14.0
    pytest-cov>=2.11.1
    pytest-httpx>=0.11.0
    pytest-mock>=3.5.1
    requests-mock>=1.10.0
    setuptools>=57.0.0

[options.entry_points]
senor_octopus.plugins =
    source.awair = senor_octopus.sources.awair:awair
    source.crypto = senor_octopus.sources.crypto:crypto
    source.mqtt = senor_octopus.sources.mqtt:mqtt
    source.random = senor_octopus.sources.rand:rand
    source.speedtest = senor_octopus.sources.speed:speed
    source.sqla = senor_octopus.sources.sqla:sqla
    source.static = senor_octopus.sources.static:static
    source.stock = senor_octopus.sources.stock:stock
    source.sun = senor_octopus.sources.sun:sun
    source.udp = senor_octopus.sources.udp.main:udp
    source.weatherapi = senor_octopus.sources.weatherapi:weatherapi
    source.whistle = senor_octopus.sources.whistle:whistle
    filter.format = senor_octopus.filters.format:format
    filter.jinja = senor_octopus.filters.jinja:jinja
    filter.jsonpath = senor_octopus.filters.jpath:jsonpath
    sink.db.postgresql = senor_octopus.sinks.db.postgresql:postgresql
    sink.log = senor_octopus.sinks.log:log
    sink.mqtt = senor_octopus.sinks.mqtt:mqtt
    sink.pushover = senor_octopus.sinks.pushover:pushover
    sink.slack = senor_octopus.sinks.slack:slack
    sink.sms = senor_octopus.sinks.sms:sms
    sink.tuya = senor_octopus.sinks.tuya:tuya
senor_octopus.source.udp.protocols =
    micron_bolt_mini_2 = senor_octopus.sources.udp.protocols.micron_bolt_mini_2:MicronBoltMini2UDPProtocol
console_scripts =
    srocto = senor_octopus.cli:run

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this py.test issue.
addopts =
    --cov senor_octopus --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.1
package = senor_octopus
extensions =
    cirrus
    pre_commit
    travis
